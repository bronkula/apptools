
.chromeless {
	border-width: 0;
	border-radius: 0;
	font: inherit;
	color: inherit;
	line-height:inherit;
	background-color: transparent;
	outline: 0;
	width: 100%;
	padding: 0;
	margin: 0;
	display: inline-block;
}



@mixin buttons($root:'',$variants:(),$option:'.solid') {
	/*



	Button



	*/

	// @debug $root;
	// @debug $variants;
	// @debug $option;
	@each $k,$v in $variants {
		&.#{$k}#{$option} {
			@if(map-has-key($v, "back")) {background-color:var(--color-#{map-get($v, "back")});}
			@if(map-has-key($v, "color")) {color:var(--color-#{map-get($v, "color")});}
			@if(map-has-key($v, "border")) {border: var(--border-width) solid var(--color-#{map-get($v, "border")});}
			&:active {
				@if(map-has-key($v, "activeback")) {background-color:var(--color-#{map-get($v, "activeback")});}
				@if(map-has-key($v, "activecolor")) {color:var(--color-#{map-get($v, "activecolor")});}
				@if(map-has-key($v, "activeborder")) {border:var(--border-width) solid var(--color-#{map-get($v, "activeborder")});}
			}
			&:hover {
				@if(map-has-key($v, "hoverback")) {background-color:var(--color-#{map-get($v, "hoverback")});}
				@if(map-has-key($v, "hovercolor")) {color:var(--color-#{map-get($v, "hovercolor")});}
				@if(map-has-key($v, "hoverborder")) {border:var(--border-width) solid var(--color-#{map-get($v, "hoverborder")});}
			}
		}
	}
}





/* Buttons */
.btn {

	&-size {
		line-height:var(--button-height);
		height:var(--button-height);
	}

	@extend .btn-size;
	display:inline-block;
	position:relative;
	padding: 0 1em;
	border-radius:  var(--radius);
	color: inherit;
	background-color: transparent;
	font: inherit;
	border-width:0;
	// border:solid transparent 0.1rem;
	cursor:pointer;
	text-align:center;
	outline: 0;

	&:hover {
		text-decoration:none;
		outline:0;
	}


	&.text {
		background-color:transparent;
		border-width:0;
		color:inherit;
		padding:0;
	}

	&.solid {
		color: var(--color-neutral-dark);
		background-color: var(--color-neutral-light);
	}

	/* do a buttons */
	@include buttons(#{&},(
		main:(back:'main-light',activeback:'main-medium'),
		neutral:(back:'neutral-light',activeback:'neutral-medium'),
		commit:(back:'commit-light',activeback:'commit-medium'),
		cancel:(back:'cancel-light',activeback:'cancel-medium'),
		warning:(back:'warning-light',activeback:'warning-medium') ));
	@include buttons(#{&},(
		main:(back:'main-light',activeback:'main-medium'),
		neutral:(back:'neutral-light',activeback:'neutral-medium'),
		commit:(back:'commit-light',activeback:'commit-medium'),
		cancel:(back:'cancel-light',activeback:'cancel-medium'),
		warning:(back:'warning-light',activeback:'warning-medium') ),
		'.solid.light');
	@include buttons(#{&},(
		main:(back:'main-medium',activeback:'main-light',color:'main-light',activecolor:'main-dark'),
		neutral:(back:'neutral-medium',activeback:'neutral-light',color:'neutral-light',activecolor:'neutral-dark'),
		commit:(back:'commit-medium',activeback:'commit-light'),
		cancel:(back:'cancel-medium',activeback:'cancel-light',color:'cancel-light',activecolor:'cancel-dark'),
		warning:(back:'warning-medium',activeback:'warning-light') ),
		'.solid.medium');
	@include buttons(#{&},(
		main:(back:'main-dark',color:'white',activeback:'main-medium',activecolor:'black'),
		neutral:(back:'neutral-dark',color:'white',activeback:'neutral-medium',activecolor:'black'),
		commit:(back:'commit-dark',color:'white',activeback:'commit-medium',activecolor:'black'),
		cancel:(back:'cancel-dark',color:'white',activeback:'cancel-medium',activecolor:'black'),
		warning:(back:'warning-dark',color:'white',activeback:'warning-medium',activecolor:'black') ),
		'.solid.dark');
	@include buttons(#{&},(
		main:(border:'main-medium',color:'main-dark',activeborder:'main-dark',activecolor:'main-dark'),
		neutral:(border:'neutral-medium',color:'neutral-dark',activeborder:'neutral-dark',activecolor:'neutral-dark'),
		commit:(border:'commit-medium',color:'commit-dark',activeborder:'commit-dark',activecolor:'commit-dark'),
		cancel:(border:'cancel-medium',color:'cancel-dark',activeborder:'cancel-dark',activecolor:'cancel-dark'),
		warning:(border:'warning-medium',color:'warning-dark',activeborder:'warning-dark',activecolor:'warning-dark') ),
		'.lined');

	// @include buttons((
	// 	main:'light',
	// 	neutral:'light',
	// 	commit:'light',
	// 	cancel:'light',
	// 	warning:'light' ),'.solid.light');

	// &.solid.main { background-color:var(--color-main-light); }
	// &.solid.neutral { background-color:var(--color-neutral-light); }
	// &.solid.commit { background-color:var(--color-commit-light); }
	// &.solid.cancel { background-color:var(--color-cancel-light); }
	// &.solid.warning { background-color:var(--color-warning-light); }

	// &.solid.main.light { background-color:var(--color-main-light); }
	// &.solid.neutral.light { background-color:var(--color-neutral-light); }
	// &.solid.commit.light { background-color:var(--color-commit-light); }
	// &.solid.cancel.light { background-color:var(--color-cancel-light); }
	// &.solid.warning.light { background-color:var(--color-warning-light); }

	// &.solid.main.medium { background-color:var(--color-main-medium); color:var(--color-white); }
	// &.solid.neutral.medium { background-color:var(--color-neutral-medium); color:var(--color-white); }
	// &.solid.commit.medium { background-color:var(--color-commit-medium); color:var(--color-white); }
	// &.solid.cancel.medium { background-color:var(--color-cancel-medium); color:var(--color-white); }
	// &.solid.warning.medium { background-color:var(--color-warning-medium); color:var(--color-white); }

	// &.solid.main.dark { background-color:var(--color-main-dark); color:var(--color-main-light); }
	// &.solid.neutral.dark { background-color:var(--color-neutral-dark); color:var(--color-neutral-light); }
	// &.solid.commit.dark { background-color:var(--color-commit-dark); color:var(--color-commit-light); }
	// &.solid.cancel.dark { background-color:var(--color-cancel-dark); color:var(--color-cancel-light); }
	// &.solid.warning.dark { background-color:var(--color-warning-dark); color:var(--color-warning-light); }

	// &.lined.main { border-color:var(--color-main-medium); }
	// &.lined.neutral { border-color:var(--color-neutral-medium); }
	// &.lined.commit { border-color:var(--color-commit-dark); }
	// &.lined.cancel { border-color:var(--color-cancel-medium); }
	// &.lined.warning { border-color:var(--color-warning-dark); }

	// &.main:active { border-color:var(--color-main-dark); }
	// &.neutral:active { border-color:var(--color-neutral-dark); }
	// &.commit:active { border-color:var(--color-commit-dark); }
	// &.cancel:active { border-color:var(--color-cancel-dark); }
	// &.warning:active { border-color:var(--color-warning-dark); }

	// &.text.main,&.lined.main { color:var(--color-main-medium); }
	// &.text.neutral,&.lined.neutral { color:var(--color-neutral-medium); }
	// &.text.commit,&.lined.commit { color:var(--color-commit-dark); }
	// &.text.cancel,&.lined.cancel { color:var(--color-cancel-medium); }
	// &.text.warning,&.lined.warning { color:var(--color-warning-dark); }


	&.lined {
		line-height:calc(var(--button-height) - (var(--border-width) * 2));
		// height:calc(var(--button-height) - (var(--border-width) * 2));
	}

	&.full {
		width:100%;
		&+.full {
			margin-top: 0.3rem;
		}
	}
	&.flush {
		padding:0;
	}


	&.small {
		font-size:0.7em;
	}
	&.large {
		font-size:1.25em;
	}

}





.form {
	&-control {
		margin-top: 1em;
		margin-bottom: 1em;
	}
	&-input {
		@extend .chromeless;
		@extend .btn-size;
		padding:0 1em;
		border-bottom: 1px solid var(--color-neutral-medium);
	}
	&-label {
		margin: 0 1em;
		font-size: 0.7em;
		color:var(--color-neutral-medium);
	}
	&-button {
		@extend .btn;
		@extend .btn.solid;
		@extend .btn.solid.neutral;
		@extend .btn.full;
		&:active {
			background-color:var(--color-main-light);
		}
	}
	&-blank {
		@extend .chromeless;
	}



	&-select>select {
		@extend .btn-size;
		padding: 0 1.5em 0 1em;
		background-color: var(--color-neutral-light);
		border-width: 0;
		border-radius: var(--radius);
		cursor: pointer;
		-webkit-appearance:none;
		display:inline-block;
		width:100%;
		font:inherit;
		outline:0;
	}
	&-select {
	   position:relative;
	}
	&-select::after {
	   position:absolute;
	   content:'â–¼';
	   font-family:Arial,sans-serif;
	   font-size:0.6em;
	   top:50%;
	   transform:translateY(-50%);
	   right:0.4rem;
	   pointer-events:none;
	   color:var(--color-neutral-medium);
	}
	

	&-group {
		display:flex;

		&>:not(:first-child):not(:last-child) {
			border-radius:0;
		}
		&>:last-child {
			border-top-left-radius:0;
			border-bottom-left-radius:0;
		}
		&>:first-child {
			border-top-right-radius:0;
			border-bottom-right-radius:0;
		}
	}
}
.solid-input {
	@extend .chromeless;
	@extend .btn-size;
	padding:0 1em;
	background-color:var(--color-neutral-lighter);
	border-radius: var(--radius);
}




.toggle {
	--line-width:2px;
	label {
		display: inline-block;
		width: 2em;
		height: 1em;
		background-color: var(--color-neutral-light);
		border: var(--line-width) solid var(--color-neutral-medium);
		border-radius: 1em;
		position: relative;
		font-size: 1.3em;
		overflow:hidden;
		box-sizing:content-box;
	}
	label::after {
	   content:'';
	   position:absolute;
	   width:1em;
	   height:1em;
	   display:inline-block;
	   border-radius:1em;
	   background-color:var(--color-white);
	   transition:all 0.3s;
	   box-shadow:0 0 6px rgba(0,0,0,0.6);
	}
	input:checked + label::after {
	   transform:translateX(1em);
	}
	&.square {
		label,
		label::after {
			border-radius:var(--line-width);
		}
	}
}



.hotdog {
	width: 100%;
	padding: 0 1em;
	border-radius: 2em;
	background-color: var(--color-neutral-light);
	color: var(--color-black);
	@extend .btn-size;
	border-width: 0;
	font: inherit;
	display:inline-flex;
	outline:0;

	.navbar & {
		background-color: var(--color-main-light);
		color: var(--color-main-dark);
	}

	&>input {
		@extend .chromeless;
		@extend .btn-size;
	}

	.nav-overlay & {
		background-color: white;
		box-shadow:1px 1px 10px rgba(0,0,0,0.2);
		width: initial;
		height: var(--header-height);
	}
	
	a {
		padding: 0;
		background-color: rgba(255,255,255,0.5);
		border-radius: 2em;
		width: 1.8em;
		height: 1.8em;
		align-self: center;
		display: block;
		text-align: center;
		line-height: 1.8em;
	}

	&-bun {
		padding: 0.3em 0.5em;
		&>.hotdog {
			padding:0 1em;

		}
	}
}



