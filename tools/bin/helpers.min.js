const templater=f=>a=>(Array.isArray(a)?a:[a]).reduce((r,o,i,a)=>r+f(o,i,a),""),someProps=(p,s)=>o=>p.some(t=>RegExp(s,"i").test(o[t])),somePropsAll=(a,p,s)=>a.filter(someProps(p,s)),somePropsFirst=(a,p,s)=>a.find(someProps(p,s)),somePropsIndex=(a,p,s)=>a.findIndex(someProps(p,s)),sameProps=p=>o=>Object.keys(p).every(k=>o[k]===p[k]),samePropsAll=(a,p)=>a.filter(sameProps(p)),samePropsFirst=(a,p)=>a.find(sameProps(p)),samePropsIndex=(a,p)=>a.findIndex(sameProps(p)),zeros=(n,e)=>(+n+Math.pow(10,e)+"").substr(1),numberCommas=n=>(n+"").replace(/\B(?=(?=\d*\.)(\d{3})+(?!\d))/g,","),moneyCommas=(n,d=2)=>"$"+numberCommas(n.toFixed(d)),arrayReplace=(ax,ar)=>c=>ax.reduce((r,o,i)=>r.replace(o,ar[i]),c),readFiles=(f,c,i=0)=>{if(f&&f[i]){let r=new FileReader;r.onload=(e=>{c(e),readFiles(f,c,i+1)}),r.readAsDataURL(f[i])}},compose=(...fns)=>x=>fns.reduceRight((y,f)=>f(y),x),pipe=(...fns)=>x=>fns.reduce((y,f)=>f(y),x),trace=l=>v=>(console.log(`${l}: ${v}`),v),delay=t=>new Promise(r=>setTimeout(r,t)),aGetFile=async f=>{const r=await fetch(f);return await r.json()},checkData=(v,t=10)=>new Promise(r=>{const c=()=>v()?r(v()):setTimeout(c,t);c()}),mapJoin=(a,f,d)=>a.map(f).join(d),splitMapJoin=(a,f,jd,sd=/\s?,\s?/)=>mapJoin(Array.isArray(a)?a:a.split(sd),f,jd),getStore=s=>void 0!==localStorage[s]?JSON.parse(localStorage[s]):[],setStore=(s,v)=>localStorage[s]=JSON.stringify(v),order=(arr,p="order",r=!1)=>arr.slice().sort((a,b)=>a[p]>b[p]?r?-1:1:a[p]<b[p]?r?1:-1:0);