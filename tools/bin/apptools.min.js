const templater=t=>e=>(Array.isArray(e)?e:[e]).reduce((e,o,r,s)=>e+t(o,r,s),""),someProps=(t,e)=>o=>t.some(t=>RegExp(e,"i").test(o[t])),somePropsAll=(t,e,o)=>t.filter(someProps(e,o)),somePropsFirst=(t,e,o)=>t.find(someProps(e,o)),somePropsIndex=(t,e,o)=>t.findIndex(someProps(e,o)),sameProps=t=>e=>Object.keys(t).every(o=>e[o]===t[o]),samePropsAll=(t,e)=>t.filter(sameProps(e)),samePropsFirst=(t,e)=>t.find(sameProps(e)),samePropsIndex=(t,e)=>t.findIndex(sameProps(e)),zeros=(t,e)=>(+t+Math.pow(10,e)+"").substr(1),numberCommas=t=>(t+"").replace(/\B(?=(?=\d*\.)(\d{3})+(?!\d))/g,","),moneyCommas=(t,e=2)=>"$"+numberCommas(t.toFixed(e)),arrayReplace=(t,e)=>o=>t.reduce((t,o,r)=>t.replace(o,e[r]),o),readFiles=(t,e,o=0)=>{if(t&&t[o]){let r=new FileReader;r.onload=(r=>{e(r),readFiles(t,e,o+1)}),r.readAsDataURL(t[o])}},compose=(...t)=>e=>t.reduceRight((t,e)=>e(t),e),pipe=(...t)=>e=>t.reduce((t,e)=>e(t),e),trace=t=>e=>(console.log(`${t}: ${e}`),e),delay=t=>new Promise(e=>setTimeout(e,t)),aGetFile=async t=>{const e=await fetch(t);return await e.json()},checkData=(t,e=10)=>new Promise(o=>{const r=()=>t()?o(t()):setTimeout(r,e);r()}),mapJoin=(t,e,o)=>t.map(e).join(o),splitMapJoin=(t,e,o,r=/\s?,\s?/)=>mapJoin(Array.isArray(t)?t:t.split(r),e,o),getStore=t=>void 0!==localStorage[t]?JSON.parse(localStorage[t]):[],setStore=(t,e)=>localStorage[t]=JSON.stringify(e),order=(t,e="order",o=!1)=>t.slice().sort((t,r)=>t[e]>r[e]?o?-1:1:t[e]<r[e]?o?1:-1:0),q=(...t)=>new qlist(...t);q.fetch=(t=>fetch(t).then(t=>t.json())),q.fetchAll=(t=>Promise.all(t.map(t=>q.fetch(t)))),q.fetchEach=((t,e=(t=>t))=>t.map(t=>o=>q.fetch(t).then(t=>o.concat([e(t)]))).reduce((t,e)=>t.then(e),Promise.resolve([]))),q.post=((t,e)=>fetch(t,{headers:{"Content-Type":"application/json"},method:"POST",body:JSON.stringify(e)}).then(t=>t.json()));const qlist=function(t,e=document){let o=t&&this.isDoc(e)?t instanceof HTMLElement||t==e?[t]:Array.isArray(t)?t:e.querySelectorAll(t):[];Object.assign(this,o),this.length=o.length};qlist.prototype.forEach=Array.prototype.forEach,qlist.prototype.map=Array.prototype.map,qlist.prototype.flatMap=Array.prototype.flatMap,qlist.prototype.reduce=Array.prototype.reduce,qlist.prototype.some=Array.prototype.some,qlist.prototype.every=Array.prototype.every,qlist.prototype.getPath=(t=>t.path||t.composedPath&&t.composedPath()),qlist.prototype.isDoc=(t=>t instanceof HTMLElement||t instanceof HTMLDocument),qlist.prototype.inPath=function(t,e){return this.getPath(t).some(t=>t==e)},qlist.prototype.sift=function(t){return q([...new Set(this.flatMap(t))])},qlist.prototype.on=function(t,e,o=!1){return t.trim().split(/\s+/).forEach(t=>{this.forEach(r=>r.addEventListener(t,e,o))}),this},qlist.prototype.delegate=function(t,e,o){return this.on(t,t=>this.find(e).forEach(e=>this.inPath(t,e)?o.call(e,t,e):0),{capture:!0}),this},qlist.prototype.toArray=function(){return this.reduce((t,e)=>t.concat([e]),[])},qlist.prototype.find=function(t){return q(this.reduce((e,o)=>[...e,...q(t,o).toArray()],[]))},qlist.prototype.next=function(){return this.sift(t=>t.nextElementSibling)},qlist.prototype.prev=function(){return this.sift(t=>t.previousElementSibling)},qlist.prototype.parent=function(){return this.sift(t=>t.parentElement)},qlist.prototype.children=function(){return this.sift(t=>[...t.children])},qlist.prototype.siblings=function(t){return this.sift(e=>[...e.parentElement.children].filter(o=>o!=e&&(!t||o.matches(t))))},qlist.prototype.is=function(t){return this.some(e=>e.matches(t))},qlist.prototype.closest=function(t){return this.sift(e=>e.closest(t))};